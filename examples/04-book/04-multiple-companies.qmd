```{r, include=FALSE}
#| message: false
#| warning: false
library(tidyverse)
library(tidyquant)
library(lubridate)
library(knitr)
library(gt)
get_what <- "stock.prices"
companies <- c("AAPL",
             "MSFT",
             "GOOG",
             "AMZN",
             "TSLA")

stocks_data <- 
  companies |> 
  map(tq_get, get = get_what) |> 
  bind_rows()

company_ticker <- "AAPL"
start_date <-  ymd("2020-03-11")

company_data <- 
  stocks_data |> 
  filter(symbol == company_ticker, 
         date > start_date) 
```

# Analyzing multiple companies

-   Now we'll carry the same analysis for multiple companies

-   We import the data and prepare it for analysis

```{r, include=FALSE}
company_tickers <- c(
  "AAPL", "MSFT", "GOOG", "AMZN", "TSLA") 
company_names <- c(
  "Apple", "Microsoft", "Alphabet (Google)", "Amazon", "Tesla")
company_colors <-  c("AAPL" = "#555555", 
             "MSFT" = "#7FBA00", 
             "GOOG" ="#4285F4" , 
             "AMZN" = "#FF9900",
             "TSLA" = "#cc0000"
             )
```

```{r}
returns_data <- 
  stocks_data |> 
  filter(date > start_date) |> 
  select(symbol,date, close) |> 
  group_by(symbol) |> 
  mutate(daily_log_returns = log(close) - log(lag(close))) |> 
  ungroup()

```

## Plotting the stock price

-   Let's plot the whole

```{r}
#| label: fig-all-stocks
#| fig-cap: "Stocks prices for all companies in the selected period"

returns_data |> 
  ggplot(aes(x = date, y = close,  group = symbol, color = symbol))+
  geom_line(alpha=0.5)+
  labs(
    title = str_glue("Daily price for {glue::glue_collapse(company_tickers, sep = ', ')}"), 
    subtitle = str_glue("Close stock prices since {start_date |> format('%d %B, %Y')}"),
    x = "Date",
    y = "Close Price"
    ) + 
  theme_minimal()+
  scale_color_manual(values = company_colors)
```

-   A single chart is not very satisfactory, even if we try to make differentiate companies with colors.

## Visualising the log-returns

-   As the interest is in the `log`-returns, let's plot the returns in a single frame

```{r}
#| label: fig-log-returns-all-stocks
#| fig-cap: "Log returns of all companies"
returns_data |> 
  ggplot(aes(x = date, y = daily_log_returns,  group = symbol, color = symbol))+
  geom_line(alpha = 0.5) +
  labs(
    title = str_glue("Daily Returns of the stock for all companies"), 
    subtitle = str_glue("Close stock prices since {start_date |> format('%d %B, %Y')}"),
    x = "Date",
    y = "Returns"
    ) + 
  theme_minimal()+
  theme(legend.position = "none")+ 
  scale_color_manual(values = company_colors)
```

::: callout-important
## Create a faceted chart

-   There's a problem here, as you can see. The log-returns are confounded and become difficult to distinguish in spite of the use of relevant colors!
:::

## Creating a faceted chart

-   To distinguish better, we can use the function `facet_wrap()` .

-   This creates a \_mini\_ plot according to a variable

```{r}
#| label: fig-log-returns-all-stocks-faceted
#| fig-cap: "Log returns of all companies - faceted"
returns_data |> 
  ggplot(aes(x = date, y = daily_log_returns,  group = symbol, color = symbol))+
  geom_line(alpha = 0.5) +
  labs(
    title = str_glue("Daily Returns of the stock for all companies"), 
    subtitle = str_glue("Close stock prices since {start_date |> format('%d %B, %Y')}"),
    x = "Date",
    y = "Returns"
    ) + 
  theme_minimal()+
  facet_grid(rows = vars(symbol)) + # <1> 
  theme(legend.position = "none")+ 
  scale_color_manual(values = company_colors)
```

1.  On this line we added the faceted chart

::: {.callout-important collapse="true"}
## What can we see?

-   Uncertainties in the supply chains produced by the international crises seem to have affected companies in the same way

-   However the magnitude of these impacts seems to have been different across companies, e.g.

    -   TSLA shows significantly more risk
:::

## Average Returns for all companies

```{r}
#| label: tbl-average-returns-all-companies
#| tbl-cap: "Average Returns for all companies" 
mean_and_sd <- 
  returns_data |> 
  mutate(year = year(date)) |> 
  group_by(symbol, year) |> 
  summarise(
    average_return = mean(daily_log_returns, na.rm = TRUE), 
    sd_return = sd(daily_log_returns, na.rm = TRUE)
    ) |> 
  ungroup()

mean_and_sd |> 
  select(-sd_return) |> 
  pivot_wider(names_from = year,values_from = average_return) |> 
  gt() |> 
  tab_header(
    title= "Average Yearly returns of Tech companies",
    subtitle  = str_glue("From {start_date |> format('%d %b, %Y')} to {Sys.Date() |> format('%d %b, %Y')}")) |> 
  fmt_number(columns = -symbol, decimals  = 4) |> 
  tab_style(
    style = list(
      cell_fill(color = "lightgreen"), 
      cell_text(color = "white")), 
    locations = list(
      cells_body(columns =`2020`, 
                 rows= `2020`>0 ), 
      cells_body(columns =`2021`, 
                 rows= `2021`>0 ), 
       cells_body(columns =`2022`, 
                 rows= `2022`>0 ), 
       cells_body(columns =`2022`, 
                 rows= `2022`>0 ), 
       cells_body(columns =`2023`, 
                 rows= `2023`>0 ), 
      cells_body(columns =`2024`, 
                 rows= `2024`>0 )
    )
  ) |> 
  tab_style(
    style = list(
      cell_fill(color = "red"), 
      cell_text(color = "white")), 
        locations = list(
      cells_body(columns =`2020`, 
                 rows= `2020`<=0 ), 
      cells_body(columns =`2021`, 
                 rows= `2021`<=0 ), 
       cells_body(columns =`2022`, 
                 rows= `2022`<=0 ), 
       cells_body(columns =`2022`, 
                 rows= `2022`<= 0 ), 
       cells_body(columns =`2023`, 
                 rows= `2023`<=0 ), 
      cells_body(columns =`2024`, 
                 rows= `2024`<=0 )
    )
  )
```

## Risk (SD) all companies

```{r}
#| label: tbl-risk-all-companies
#| tbl-cap: "Risk (SD) all companies in the period"
mean_and_sd |> 
  select(-average_return) |> 
  pivot_wider(names_from = year,values_from = sd_return) |> 
  gt() |> 
  tab_header(
    title= "Average Yearly SDs of Tech companies",
    subtitle  = str_glue("From {start_date |> format('%d %b, %Y')} to {Sys.Date() |> format('%d %b, %Y')}")) |> 
  fmt_number(columns = -symbol, decimals  = 4) |> 
  tab_style(
    style = list(
      cell_fill(color = "red"), 
      cell_text(color = "white")), 
        locations = list(
      cells_body(columns =`2020`, 
                 rows= `2020`>=0.020), 
      cells_body(columns =`2021`, 
                 rows= `2021`>=0.020 ), 
       cells_body(columns =`2022`, 
                 rows= `2022`>=0.020  ), 
       cells_body(columns =`2022`, 
                 rows= `2022`>=0.020  ), 
       cells_body(columns =`2023`, 
                 rows= `2023`>=0.020  ), 
      cells_body(columns =`2024`, 
                 rows= `2024`>=0.020)
    )
  )
```
